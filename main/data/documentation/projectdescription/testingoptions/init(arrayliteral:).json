{"identifier":{"url":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/init(arrayLiteral:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"...)"}]}]}],"hierarchy":{"paths":[["doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Project","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/SetAlgebra-Implementations"],["doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Project","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Scheme","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions","doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/SetAlgebra-Implementations"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Inherited from "},{"code":"SetAlgebra.init(arrayLiteral:)","type":"codeVoice"},{"type":"text","text":"."}],"metadata":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"roleHeading":"Initializer","symbolKind":"init","title":"init(arrayLiteral:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:s10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc::SYNTHESIZED::s:18ProjectDescription14TestingOptionsV","role":"symbol","extendedModule":"Swift","modules":[{"name":"ProjectDescription"}]},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/projectdescription\/testingoptions\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/TestingOptions/SetAlgebra-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","title":"SetAlgebra Implementations","type":"topic","url":"\/documentation\/projectdescription\/testingoptions\/setalgebra-implementations","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/SetAlgebra-Implementations"},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/Scheme":{"type":"topic","url":"\/documentation\/projectdescription\/scheme","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scheme","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Scheme","title":"Scheme","kind":"symbol","abstract":[{"text":"A custom scheme for a project.","type":"text"}],"navigatorTitle":[{"text":"Scheme","kind":"identifier"}]},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/TestingOptions":{"navigatorTitle":[{"kind":"identifier","text":"TestingOptions"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TestingOptions"}],"type":"topic","url":"\/documentation\/projectdescription\/testingoptions","role":"symbol","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions","abstract":[{"type":"text","text":"Options to configure testing of autogenerated schemes."}],"kind":"symbol","title":"TestingOptions"},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/Project":{"navigatorTitle":[{"kind":"identifier","text":"Project"}],"url":"\/documentation\/projectdescription\/project","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/Project","title":"Project","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Project"}],"abstract":[{"text":"A project representation.","type":"text"}]},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription":{"url":"\/documentation\/projectdescription","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription","title":"ProjectDescription","abstract":[{"text":"A framework that defines Tuistâ€™s manifests, like projects or workspaces.","type":"text"}]},"doc://io.tuist.ProjectDescription/documentation/ProjectDescription/TestingOptions/init(arrayLiteral:)":{"identifier":"doc:\/\/io.tuist.ProjectDescription\/documentation\/ProjectDescription\/TestingOptions\/init(arrayLiteral:)","kind":"symbol","type":"topic","abstract":[],"title":"init(arrayLiteral:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"ArrayLiteralElement","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Self.Element","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol","url":"\/documentation\/projectdescription\/testingoptions\/init(arrayliteral:)"}}}